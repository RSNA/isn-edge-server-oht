/*******************************************************************************
 * Copyright (c) 2008 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.08.13 at 04:13:48 PM PDT 
//


package org.openhealthtools.ihe.atna.auditor.models.rfc3881;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.openhealthtools.ihe.atna.auditor.utils.EventUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="EventIdentification" type="{}EventIdentificationType"/>
 *         &lt;element name="ActiveParticipant" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;extension base="{}ActiveParticipantType">
 *               &lt;/extension>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="AuditSourceIdentification" type="{}AuditSourceIdentificationType" maxOccurs="unbounded"/>
 *         &lt;element name="ParticipantObjectIdentification" type="{}ParticipantObjectIdentificationType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
//@XmlAccessorType(XmlAccessType.FIELD)
/*//@XmlType(name = "", propOrder = {
    "eventIdentification",
    "activeParticipant",
    "auditSourceIdentification",
    "participantObjectIdentification"
})*/
//@XmlRootElement(name = "AuditMessage")
public class AuditMessage {

    //@XmlElement(name = "EventIdentification", required = true)
    protected EventIdentificationType eventIdentification;
    //@XmlElement(name = "ActiveParticipant", required = true)
    protected List<ActiveParticipantType> activeParticipant;
    //@XmlElement(name = "AuditSourceIdentification", required = true)
    protected List<AuditSourceIdentificationType> auditSourceIdentification;
    //@XmlElement(name = "ParticipantObjectIdentification")
    protected List<ParticipantObjectIdentificationType> participantObjectIdentification;

    
    public String toString(boolean useSpacing)
    {
    	StringBuffer sb = new StringBuffer();
    	
    	sb.append("<AuditMessage");
    	sb.append(" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"");
    	sb.append(" xsi:noNamespaceSchemaLocation=\"healthcare-security-audit.xsd\"");
    	sb.append(">");
    	sb.append(eventIdentification.toString(useSpacing));
    	if (!EventUtils.isEmptyOrNull(activeParticipant)) {
    		Iterator<ActiveParticipantType> apIterator = activeParticipant.iterator();
    		while (apIterator.hasNext()) {
    			sb.append(apIterator.next().toString(useSpacing));
    		}
    	}
    	if (!EventUtils.isEmptyOrNull(auditSourceIdentification)) {
    		Iterator<AuditSourceIdentificationType> asiIterator = auditSourceIdentification.iterator();
    		while (asiIterator.hasNext()) {
    			sb.append(asiIterator.next().toString(useSpacing));
    		}
    	}
    	if (!EventUtils.isEmptyOrNull(participantObjectIdentification)) {
    		Iterator<ParticipantObjectIdentificationType> poiIterator = participantObjectIdentification.iterator();
    		while (poiIterator.hasNext()) {
    			sb.append(poiIterator.next().toString(useSpacing));
    		}
    	}
    	
    	
    	sb.append("</AuditMessage>");
    	
    	return sb.toString();
    }
    
    public String toString()
    {
    	return toString(true);
    }
    
    
    /**
     * Gets the value of the eventIdentification property.
     * 
     * @return
     *     possible object is
     *     {@link EventIdentificationType }
     *     
     */
    public EventIdentificationType getEventIdentification() {
        return eventIdentification;
    }

    /**
     * Sets the value of the eventIdentification property.
     * 
     * @param value
     *     allowed object is
     *     {@link EventIdentificationType }
     *     
     */
    public void setEventIdentification(EventIdentificationType value) {
        this.eventIdentification = value;
    }

    /**
     * Gets the value of the activeParticipant property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the activeParticipant property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActiveParticipant().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AuditMessage.ActiveParticipant }
     * 
     * 
     */
    public List<ActiveParticipantType> getActiveParticipant() {
        if (activeParticipant == null) {
            activeParticipant = new ArrayList<ActiveParticipantType>();
        }
        return this.activeParticipant;
    }

    /**
     * Gets the value of the auditSourceIdentification property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the auditSourceIdentification property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAuditSourceIdentification().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AuditSourceIdentificationType }
     * 
     * 
     */
    public List<AuditSourceIdentificationType> getAuditSourceIdentification() {
        if (auditSourceIdentification == null) {
            auditSourceIdentification = new ArrayList<AuditSourceIdentificationType>();
        }
        return this.auditSourceIdentification;
    }

    /**
     * Gets the value of the participantObjectIdentification property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the participantObjectIdentification property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParticipantObjectIdentification().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ParticipantObjectIdentificationType }
     * 
     * 
     */
    public List<ParticipantObjectIdentificationType> getParticipantObjectIdentification() {
        if (participantObjectIdentification == null) {
            participantObjectIdentification = new ArrayList<ParticipantObjectIdentificationType>();
        }
        return this.participantObjectIdentification;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;extension base="{}ActiveParticipantType">
     *     &lt;/extension>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
//    @XmlAccessorType(XmlAccessType.FIELD)
//    @XmlType(name = "")
//    public static class ActiveParticipant
//        extends ActiveParticipantType
//    {
//
//
//    }

}
